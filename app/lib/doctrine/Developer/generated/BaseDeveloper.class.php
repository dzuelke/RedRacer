<?php

/**
 * BaseDeveloper
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $email
 * @property string $website_url
 * @property string $avatar_url
 * @property string $password
 * @property string $salt
 * @property boolean $is_team_member
 * @property Doctrine_Collection $OwnedProjects
 * @property Doctrine_Collection $DevelopingProjects
 * 
 * @package    Redracer
 * @subpackage Database
 * @author     Benjamin BÃ¶rngen-Schmidt <benjamin@boerngen-schmidt.de>
 * @version    SVN: $Id: Builder.php 5441 2009-01-30 22:58:43Z jwage $
 */
abstract class BaseDeveloper extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('developer');
        $this->hasColumn('id', 'integer', null, array('type' => 'integer', 'autoincrement' => true, 'primary' => true));
        $this->hasColumn('name', 'string', 50, array('type' => 'string', 'notnull' => true, 'length' => '50'));
        $this->hasColumn('email', 'string', 50, array('type' => 'string', 'notnull' => true, 'length' => '50'));
        $this->hasColumn('website_url', 'string', 200, array('type' => 'string', 'length' => '200'));
        $this->hasColumn('avatar_url', 'string', 200, array('type' => 'string', 'length' => '200'));
        $this->hasColumn('password', 'string', 128, array('type' => 'string', 'notnull' => true, 'length' => '128'));
        $this->hasColumn('salt', 'string', 40, array('type' => 'string', 'notnull' => true, 'length' => '40'));
        $this->hasColumn('is_team_member', 'boolean', null, array('type' => 'boolean', 'notnull' => true, 'default' => false));


        $this->setAttribute(Doctrine::ATTR_EXPORT, Doctrine::EXPORT_ALL);

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        $this->hasMany('Project as OwnedProjects', array('local' => 'id',
                                                         'foreign' => 'owner'));

        $this->hasMany('Project as DevelopingProjects', array('refClass' => 'ProjectDeveloper',
                                                              'local' => 'developer',
                                                              'foreign' => 'project'));
    }
}