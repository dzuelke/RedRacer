options:
  collate: utf8_unicode_ci
  charset: utf8
attributes:
  export: all

ProjectApproval:
  package: Project
  tableName: project_approval
  columns:
    id:
      type: integer(8)
      autoincrement: true
      primary: true
    project:
      type: integer(4)
      notnull: true
    developer:
      type: integer(4)
      notnull: true
    status:
      type: integer(1)
      notnull: true
    reason: string(2147483647)
  relations:
    Users: { local: developer, foreign: id, type: one }
    Projects: { local: project, foreign: id, type: one }


ProjectAttachment:
  package: Project
  tableName: project_attachment
  columns:
    id:
      type: integer(4)
      primary: true
      autoincrement: true
    projectid:
      type: integer(4)
      notnull: true
    name:
      type: string(120)
      notnull: true
    md5:
      type: string(32)
      fixed: true
    sha1:
      type: string(128)
      fixed: true
    extension:
      type: string(5)
      fixed: true
    type:
      type: enum(4)
      values: [file, dir]
      notnull: true
    mime: string(30)
  relations:
    Projects: { local: projectid, foreign: id, type: one }
  actAs:
    NestedSet:
      hasManyRoots: true
      rootColumnName: projectid
    Timestampable:


ProjectComments:
  package: Project
  tableName: project_comments
  columns:
    id:
      type: integer(4)
      primary: true
      autoincrement: true
    project:
      type: integer(4)
      notnull: true
    user:
      type: integer(4)
      notnull: true
    comment:
      type: string(2147483647)
      notnull: true
    date: timestamp(25)
  relations:
    Users: { local: user, foreign: id, type: one }
    Projects: { local: project, foreign: id, type: one }


ProjectMaintainer:
  package: Project
  tableName: project_maintainer
  columns:
    id:
      type: integer(8)
      autoincrement: true
      primary: true
    project:
      type: integer(4)
      notnull: true
    maintainer:
      type: integer(4)
      notnull: true
  relations:
    Users: { local: maintainer, foreign: id, type: one }
    Projects: { local: project, foreign: id, type: one }


ProjectRating:
  package: Project
  tableName: project_rating
  columns:
    id:
      type: integer(8)
      autoincrement: true
      primary: true
    user:
      type: integer(4)
      notnull: true
    project:
      type: integer(4)
      notnull: true
    rate:
      type: integer(1)
      notnull: true
  relations:
    Users: { local: user, foreign: id, type: one }
    Projects: { local: project, foreign: id, type: one }


Projects:
  package: Project
  tableName: projects
  columns:
    id:
      type: integer(4)
      primary: true
      autoincrement: true
    typeid:
      type: integer(4)
      notnull: true
    name:
      type: string(100)
      notnull: true
    desciption:
      type: clob
      notnull: true
  relations:
    ProjectType: { local: typeid, foreign: id, type: one }
    ProjectApproval: { local: id, foreign: project, type: many }
    ProjectAttachment: { local: id, foreign: projectid, type: many }
    ProjectComments: { local: id, foreign: project, type: many }
    ProjectMaintainer: { local: id, foreign: project, type: many }
    ProjectRating: { local: id, foreign: project, type: many }
  actAs: [ Timestampable ]


ProjectType:
  package: Project
  tableName: project_type
  columns:
    id:  
      type: integer(4)
      primary: true
      autoincrement: true
    type: 
      type: string(20)
      notnull: true
  relations:
    Projects: { local: id, foreign: typeid, type: many }


Users:
  package: User
  tableName: users
  columns:
    id: { type: integer(4), primary: true, autoincrement: true }
    username: { type: string(50), notnull: true }
    email: { type: string(100), notnull: true }
    salt: { type: string(40), fixed: true, notnull: true }
    password: { type: string(128), fixed: true, notnull: true }
    role: { type: string(30), notnull: true }
    realname: { type: string(120) }
  relations:
    ProjectApproval: { local: id, foreign: developer, type: many }
    ProjectComments: { local: id, foreign: user, type: many }
    ProjectMaintainer: { local: id, foreign: maintainer, type: many }
    ProjectRating: { local: id, foreign: user, type: many }
  indexes:
    username:
      fields: [username]
      type: unique
    email:
      fields: [email]
      type: unique
